name: checks

on:
  push:
    branches: [ main, develop ]
  pull_request:  # run on all PRs
  schedule:  # run weekly
    - cron: "0 12 * * 0"

# HACK: let's add fake colandr envvars so tests can run
# TODO (burton): figure out a better way of configuring the app!
env:
  COLANDR_SECRET_KEY: "colandr_secret_key"
  COLANDR_PASSWORD_SALT: "colandr_password_salt"
  COLANDR_APP_DIR: "/path/to/colandr"
  COLANDR_MAIL_USERNAME: "colandr_mail_username"
  COLANDR_MAIL_PASSWORD: "colandr_mail_password"
  COLANDR_DATABASE_URI: "colandr_database_uri"
  DEV_COLANDR_DATABASE_URI: "dev_colandr_database_uri"

jobs:

  # tests:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ["3.7",]
  #       os: [macos-latest, ubuntu-latest]
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #       cache: "pip"
  #       cache-dependency-path: "pyproject.toml"
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip wheel
  #       python -m pip install -e '.[dev]'
  #   - name: Download language data
  #     run: |
  #       python3 -m textacy download lang_identifier
  #       python3 -m spacy download en_core_web_md
  #   - name: Test with pytest
  #     run: |
  #       python -m pytest tests --verbose
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.7
      uses: actions/setup-python@v4
      with:
        python-version: "3.7"
        cache: "pip"
        cache-dependency-path: "pyproject.toml"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        python -m pip install -e '.[dev]'
    - name: Check formatting with black
      run: |
        python -m black --diff colandr
    - name: Check imports with isort
      run: |
        python -m isort --diff colandr
    - name: Check correctness with ruff
      run: |
        python -m ruff check --exit-zero colandr
  types:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.7
      uses: actions/setup-python@v4
      with:
        python-version: "3.7"
        cache: "pip"
        cache-dependency-path: "pyproject.toml"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        python -m pip install -e '.[dev]'
    - name: Check types with mypy
      run: |
        python -m mypy --install-types --non-interactive colandr
