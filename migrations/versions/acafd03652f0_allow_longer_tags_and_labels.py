"""allow longer tags and labels

Revision ID: acafd03652f0
Revises: b2886c80f373
Create Date: 2023-07-19 02:11:43.936589

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "acafd03652f0"
down_revision = "b2886c80f373"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("citation_screenings", schema=None) as batch_op:
        batch_op.alter_column(
            "exclude_reasons",
            existing_type=postgresql.ARRAY(sa.Unicode(length=25)),
            type_=postgresql.ARRAY(sa.Unicode(length=64)),
            existing_nullable=True,
        )

    with op.batch_alter_table("fulltext_screenings", schema=None) as batch_op:
        batch_op.alter_column(
            "exclude_reasons",
            existing_type=postgresql.ARRAY(sa.Unicode(length=25)),
            type_=postgresql.ARRAY(sa.Unicode(length=64)),
            existing_nullable=True,
        )

    with op.batch_alter_table("studies", schema=None) as batch_op:
        batch_op.alter_column(
            "tags",
            existing_type=postgresql.ARRAY(sa.Unicode(length=25)),
            type_=postgresql.ARRAY(sa.Unicode(length=64)),
            existing_nullable=True,
            existing_server_default=sa.text("'{}'::character varying[]"),
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("studies", schema=None) as batch_op:
        batch_op.alter_column(
            "tags",
            existing_type=postgresql.ARRAY(sa.VARCHAR(length=64)),
            type_=postgresql.ARRAY(sa.Unicode(length=25)),
            existing_nullable=True,
            existing_server_default=sa.text("'{}'::character varying[]"),
        )

    with op.batch_alter_table("fulltext_screenings", schema=None) as batch_op:
        batch_op.alter_column(
            "exclude_reasons",
            existing_type=postgresql.ARRAY(sa.VARCHAR(length=64)),
            type_=postgresql.ARRAY(sa.Unicode(length=25)),
            existing_nullable=True,
        )

    with op.batch_alter_table("citation_screenings", schema=None) as batch_op:
        batch_op.alter_column(
            "exclude_reasons",
            existing_type=postgresql.ARRAY(sa.VARCHAR(length=64)),
            type_=postgresql.ARRAY(sa.Unicode(length=25)),
            existing_nullable=True,
        )

    # ### end Alembic commands ###
