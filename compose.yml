name: colandr-back

services:
  db:
    container_name: colandr-db
    image: "postgres:10"
    restart: always
    stop_grace_period: 5s
    networks:
      - colandr-back
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file: ".env"
    environment:
      - POSTGRES_USER=${COLANDR_DB_USER}
      - POSTGRES_PASSWORD=${COLANDR_DB_PASSWORD}
      - POSTGRES_DB=${COLANDR_DB_NAME}
      - PGDATA=/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U ${COLANDR_DB_USER} -d ${COLANDR_DB_NAME}"
      interval: 5s
      timeout: 3s
      retries: 5
  email:
    container_name: colandr-email
    image: "axllent/mailpit:v1.6"
    restart: unless-stopped
    ports:
      - "8025:8025" # web ui
      - "1025:1025" # smtp
    environment:
      - MP_SMTP_AUTH_ALLOW_INSECURE=1
      - MP_VERBOSE=1
      - MP_MAX_MESSAGES=100
    networks:
      - colandr-back
  broker:
    container_name: colandr-broker
    image: "redis:6.0"
    restart: always
    stop_grace_period: 5s
    networks:
      - colandr-back
    volumes:
      - broker-data:/data
    ports:
      - "6379:6379"
  api:
    container_name: colandr-api
    build:
      context: "."
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_started
      worker:
        condition: service_started
    stop_signal: SIGINT
    env_file: ".env"
    environment:
      - FLASK_APP=colandr.app:create_app()
      - COLANDR_DATABASE_URI=postgresql://${COLANDR_DB_USER}:${COLANDR_DB_PASSWORD}@colandr-db:5432/${COLANDR_DB_NAME}
      - COLANDR_CELERY_BROKER_URL=redis://colandr-broker:6379/0
      - COLANDR_CELERY_RESULT_BACKEND=redis://colandr-broker:6379/0
      - COLANDR_REDIS_HOST=colandr-broker
      - COLANDR_MAIL_SERVER=colandr-email
      - COLANDR_MAIL_PORT=1025
      - COLANDR_MAIL_USE_TLS=0
      - COLANDR_MAIL_USE_SSL=0
    networks:
      - colandr-back
    volumes:
      - .:/app
    ports:
      - 5001:5000
    command: "flask run --host 0.0.0.0 --port 5000"
  worker:
    container_name: colandr-worker
    build:
      context: "."
      dockerfile: Dockerfile
    depends_on:
      - db
      - broker
    stop_signal: SIGINT
    env_file: ".env"
    environment:
      - FLASK_APP=colandr.app:create_app()
      - COLANDR_DATABASE_URI=postgresql://${COLANDR_DB_USER}:${COLANDR_DB_PASSWORD}@colandr-db:5432/${COLANDR_DB_NAME}
      - COLANDR_CELERY_BROKER_URL=redis://colandr-broker:6379/0
      - COLANDR_CELERY_RESULT_BACKEND=redis://colandr-broker:6379/0
      - COLANDR_REDIS_HOST=colandr-broker
    networks:
      - colandr-back
    command: "celery worker --app=celery_worker.celery --loglevel=info"

networks:
  colandr-back: {}

volumes:
  db-data: {}
  broker-data: {}
