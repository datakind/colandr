apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.33.0 (HEAD)
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.33.0 (HEAD)
      labels:
        io.kompose.network/colandr-back: "true"
        io.kompose.service: db
    spec:
      containers:
        - env:
            - name: COLANDR_APP_DIR
              valueFrom:
                configMapKeyRef:
                  key: COLANDR_APP_DIR
                  name: env
            - name: COLANDR_DATABASE_URI
              valueFrom:
                configMapKeyRef:
                  key: COLANDR_DATABASE_URI
                  name: env
            - name: COLANDR_DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: COLANDR_DB_NAME
                  name: env
            - name: COLANDR_DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: COLANDR_DB_PASSWORD
                  name: env
            - name: COLANDR_DB_USER
              valueFrom:
                configMapKeyRef:
                  key: COLANDR_DB_USER
                  name: env
            - name: COLANDR_FLASK_CONFIG
              valueFrom:
                configMapKeyRef:
                  key: COLANDR_FLASK_CONFIG
                  name: env
            - name: COLANDR_MAIL_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: COLANDR_MAIL_PASSWORD
                  name: env
            - name: COLANDR_MAIL_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: COLANDR_MAIL_USERNAME
                  name: env
            - name: COLANDR_PASSWORD_SALT
              valueFrom:
                configMapKeyRef:
                  key: COLANDR_PASSWORD_SALT
                  name: env
            - name: COLANDR_SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  key: COLANDR_SECRET_KEY
                  name: env
            - name: PGDATA
              value: /var/lib/postgresql/data/db
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: COLANDR_DB_NAME
                  name: env
            - name: POSTGRES_HOST_AUTH_METHOD
              value: md5
            - name: POSTGRES_INITDB_ARGS
              value: '"--auth-host=md5"'
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: COLANDR_DB_PASSWORD
                  name: env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: COLANDR_DB_PASSWORD
                  name: env
          image: postgres:16
          livenessProbe:
            exec:
              command:
                - 'pg_isready -U  -d '
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: colandr-db
          ports:
            - containerPort: 5432
              hostPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-data4
      restartPolicy: Always
      terminationGracePeriodSeconds: 5
      volumes:
        - name: db-data4
          persistentVolumeClaim:
            claimName: db-data4
